#################################################################
#### Automations
#################################################################

- alias: 'Plex paused/stopped - normal lights'
  initial_state: true
  trigger:
    - platform: state
      entity_id: media_player.plex_livingroom
      from: 'playing'
    - platform: state
      entity_id: media_player.plex_plex_h1r93s5i49ldqs0plqixfu9d
      from: 'playing'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: group.sunroom_lights
        state: 'on'
  action:
    service: scene.turn_on
    entity_id: scene.sunroom_normal

- alias: 'Plex playing - Dimm lights'
  initial_state: true
  trigger:
    - platform: state
      entity_id: media_player.plex_livingroom
      to: 'playing'
    - platform: state
      entity_id: media_player.plex_plex_h1r93s5i49ldqs0plqixfu9d
      to: 'playing'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: group.sunroom_lights
        state: 'on'
  action:
    service: scene.turn_on
    entity_id: scene.sunroom_dim

- alias: 'Roku Idle'
  initial_state: true
  trigger:
    platform: state
    entity_id: media_player.living_room_roku
    from: 'playing'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: group.sunroom_lights
        state: 'on'
  action:
    service: scene.turn_on
    entity_id: scene.sunroom_normal

- alias: 'Roku Playing'
  initial_state: true
  trigger:
    platform: state
    entity_id: media_player.living_room_roku
    to: 'playing'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: group.sunroom_lights
        state: 'on'
      - condition: template
        value_template: "{{ is_state_attr('media_player.living_room_roku', 'app_name', 'Netflix') }}"
  action:
    service: scene.turn_on
    entity_id: scene.sunroom_dim

- alias: 'GandG Playing'
  initial_state: true
  trigger:
    platform: state
    entity_id: media_player.gandg
    to: 'playing'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: device_tracker.gandgtv
        state: 'home'
      - condition: state
        entity_id: group.bedroom_lights
        state: 'on'
  action:
    service: light.turn_on
    entity_id: light.bedroom0
    data:
      brightness: 100
      transition: 2
      xy_color: [ 0.169, 0.044 ]

- alias: 'GandG Paused'
  initial_state: true
  trigger:
    platform: state
    entity_id: media_player.gandg
    from: 'playing'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: device_tracker.gandgtv
        state: 'home'
      - condition: state
        entity_id: group.bedroom_lights
        state: 'on'
  action:
    service: light.turn_on
    entity_id: light.bedroom0
    data:
      brightness: 155
      transition: 2
      xy_color: [ 0.4448, 0.4066 ]

- alias: 'Everyone home and gone to bed - Lights out'
  initial_state: true
  trigger:
    - platform: state
      entity_id: device_tracker.livingroomtv
      to: 'not_home'
      for:
        minutes: 5
    - platform: state
      entity_id: group.gail_tracker,group.gervais_tracker,group.cam_tracker,group.jen_tracker
      to: 'home'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '22:30:00'
      - condition: state
        entity_id: device_tracker.livingroomtv
        state: 'not_home'
      - condition: or
        conditions:
          - condition: state
            entity_id: group.cam_tracker
            state: 'home'
          - condition: template
            value_template: '{{ as_timestamp(now())-as_timestamp(states.group.cam_tracker.last_updated) > 98000 }}'
      - condition: or
        conditions:
          - condition: state
            entity_id: group.jen_tracker
            state: 'home'
          - condition: template
            value_template: '{{ as_timestamp(now())-as_timestamp(states.group.jen_tracker.last_updated) > 98000 }}'
      - condition: or
        conditions:
          - condition: state
            entity_id: group.gail_tracker
            state: 'home'
          - condition: template
            value_template: '{{ distance(states.device_tracker.gail_219d5f91_3462_4a44_9c44_e159026137b6) > 10 }}'
      - condition: or
        conditions:
          - condition: state
            entity_id: group.gervais_tracker
            state: 'home'
          - condition: template
            value_template: '{{ distance(states.device_tracker.gervais_56f37929_02ce_4cc0_ab26_033d09334375) > 10 }}'
  action:
    - delay: ' 00:10:00'
    - service: homeassistant.turn_off
      entity_id: automation.timed_lights_movement_front_door
    - service: light.turn_off
    - delay: ' 00:00:04'
    - service: homeassistant.turn_on
      entity_id: automation.timed_lights_movement_front_door

- alias: 'Midnight - Sunroom Lights out'
  initial_state: false
  trigger:
    platform: time
    at: '23:59:59'
  action:
    - service: light.turn_off
      entity_id: group.sunroom_lights

- alias: '2am - Lights out'
  initial_state: true
  trigger:
    platform: time
    at: '02:00:00'
  action:
    - service: homeassistant.turn_off
      entity_id: automation.timed_lights_movement_front_door
    - service: switch.turn_off
      entity_id:
        - switch.switch2
        - switch.switch3
    - service: light.turn_off
    - delay: '00:00:05'
    - service: homeassistant.turn_on
      entity_id: automation.timed_lights_movement_front_door

- alias: '6pm - heater off'
  initial_state: true
  trigger:
    - platform: time
      at: '18:00:00'
    - platform: time
      at: '18:30:00'
    - platform: time
      at: '19:00:00'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states("sensor.season") != "summer" }}'
      - condition: or
        conditions:
          - condition: state
            entity_id: group.gervais_tracker
            state: 'home'
          - condition: template
            value_template: '{{ distance(states.device_tracker.gervais_56f37929_02ce_4cc0_ab26_033d09334375) > 10 }}'
  action:
    service: switch.turn_off
    entity_id:
      - switch.switch0

- alias: 'Sunrise - Lights out'
  initial_state: true
  trigger:
    platform: sun
    event: sunrise
    offset: '+00:10:00'
  action:
    - service: light.turn_off
    - service: switch.turn_off
      entity_id: switch.switch3
    - service: light.turn_off

- alias: 'Sunset - Lights on'
  initial_state: true
  trigger:
    platform: sun
    event: sunset
    offset: '-00:20:00'
  action:
    - service: light.turn_on
      entity_id:
        - group.hallway_lights
        - light.bathroom2
      data:
        brightness: 255
    - service: light.turn_on
      entity_id: group.outdoor_lights
      data:
        xy_color: [ 0.312,0.328 ]
        brightness: 255
        transition: 300
    - service: scene.turn_on
      entity_id: scene.sunroom_normal
    - service: switch.turn_on
      entity_id:
        - switch.switch2
        - switch.switch3

- alias: 'Sunset - Office lights on'
  initial_state: true
  trigger:
    platform: sun
    event: sunset
    offset: '-00:20:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: device_tracker.yoga
        state: 'home'
      - condition: state
        entity_id: 'binary_sensor.workday_sensor'
        state: 'on'
      - condition: state
        entity_id: group.office_lights
        state: 'off'
  action:
    - service: light.turn_on
      entity_id: group.office_lights
      data:
        brightness: 200
        transition: 5

- alias: 'Living room lux low - lights on'
  initial_state: true
  trigger:
    - platform: state
      entity_id: device_tracker.livingroomtv
      to: 'home'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: 'sensor.living_room_lux'
        below: '6500'
      - condition: state
        entity_id: group.livingroom_lights
        state: 'off'
  action:
    service: scene.turn_on
    entity_id: scene.livingroom_normal

- alias: 'Jennifer Home - turn on'
  initial_state: true
  trigger:
    platform: state
    entity_id: group.jen_tracker
    to: 'home'
  action:
    service: switch.turn_on
    entity_id: 'switch.switch1'

- alias: 'Jennifer Away - turn off'
  initial_state: false
  trigger:
    platform: state
    entity_id: group.jen_tracker
    to: 'not_home'
    for:
      hours: 2
  action:
    service: switch.turn_off
    entity_id: 'switch.switch1'

- alias: 'Midnight - heater off'
  initial_state: true
  trigger:
    - platform: time
      at: '23:59:59'
    - platform: time
      at: '00:29:59'
    - platform: time
      at: '00:59:59'
    - platform: time
      at: '01:29:59'
  condition:
    condition: template
    value_template: '{{ states("sensor.season") != "summer" }}'
  action:
    service: switch.turn_off
    entity_id: 'switch.switch1'

- alias: 'Bedroom Window fan on'
  initial_state: true
  trigger:
    platform: template
    value_template: '{{ states.sensor.yr_temperature.state < states.sensor.bed_room_temp.state }}'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states.sensor.bed_room_temp.state | int >= 18 }}'
      - condition: state
        entity_id: sensor.season
        state: 'summer'
  action:
    service: switch.turn_on
    entity_id:
      - switch.switch4

- alias: 'Bedroom Window fan off'
  initial_state: true
  trigger:
    - platform: template
      value_template: '{{ states.sensor.yr_temperature.state > states.sensor.bed_room_temp.state }}'
    - platform: template
      value_template: '{{ states.sensor.bed_room_temp.state | int < 18 }}'
  condition:
    condition: state
    entity_id: sensor.season
    state: 'summer'
  action:
    service: switch.turn_off
    entity_id:
      - switch.switch4

- alias: 'Livingroom Window fan on'
  initial_state: true
  trigger:
    platform: template
    value_template: '{{ states.sensor.yr_temperature.state < states.sensor.living_room_temp.state }}'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states.sensor.living_room_temp.state | int >= 20 }}'
      - condition: state
        entity_id: sensor.season
        state: 'summer'
  action:
    service: switch.turn_on
    entity_id: switch.switch2

- alias: 'Livingroom Window fan off'
  initial_state: true
  trigger:
    - platform: template
      value_template: '{{ states.sensor.yr_temperature.state > states.sensor.living_room_temp.state }}'
    - platform: template
      value_template: '{{ states.sensor.living_room_temp.state | int < 20 }}'
  condition:
    condition: state
    entity_id: sensor.season
    state: 'summer'
  action:
    service: switch.turn_off
    entity_id: switch.switch2

- alias: 'Gail away - turn off heater'
  initial_state: true
  trigger:
    - platform: state
      entity_id: group.gail_tracker
      from: 'home'
  condition:
    condition: template
    value_template: '{{ states("sensor.season") != "summer" }}'
  action:
    service: switch.turn_off
    entity_id:
      - switch.switch0

- alias: 'Gail home - turn on heater'
  initial_state: true
  trigger:
      - platform: time
        at: '09:00:01'
      - platform: state
        entity_id: group.gail_tracker
        to: 'home'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states.sensor.yr_temperature.state < "10" }}'
      - condition: state
        entity_id: group.gail_tracker
        state: 'home'
      - condition: time
        after: '09:00:00'
      - condition: time
        before: '17:30:00'
      - condition: state
        entity_id: 'binary_sensor.workday_sensor'
        state: 'on'
      - condition: template
        value_template: '{{ states("sensor.season") != "summer" }}'
  action:
    service: switch.turn_on
    entity_id:
      - switch.switch0

- alias: 'Bedtime'
  initial_state: true
  trigger:
    platform: state
    entity_id: device_tracker.livingroomtv
    to: 'not_home'
    for:
      minutes: 2
  condition:
    condition: and
    conditions:
      - condition: or
        conditions:
        - condition: time
          after: '22:00:00'
        - condition: time
          before: '02:00:00'
      - condition: or
        conditions:
          - condition: state
            entity_id: group.gail_tracker
            state: 'home'
          - condition: template
            value_template: '{{ distance(states.device_tracker.gail_219d5f91_3462_4a44_9c44_e159026137b6) > 10 }}'
      - condition: or
        conditions:
          - condition: state
            entity_id: group.gervais_tracker
            state: 'home'
          - condition: template
            value_template: '{{ distance(states.device_tracker.gervais_56f37929_02ce_4cc0_ab26_033d09334375) > 10 }}'
  action:
    - service: light.turn_off
      entity_id:
        - light.bathroom2
        - group.hallway_lights
        - group.kitchen_lights
        - group.office_lights
        - group.sunroom_lights
      data:
        transition: 300
    - service: homeassistant.turn_on
      entity_id: script.timer_livingroom_off
    - service: switch.turn_off
      entity_id:
        - switch.switch2
        - switch.switch3

- alias: 'GandG not home - turn off bedroom things'
  initial_state: true
  trigger:
    - platform: state
      entity_id: group.gail_tracker
      from: 'home'
    - platform: state
      entity_id: group.gervais_tracker
      from: 'home'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.gail_tracker
        state: 'not_home'
      - condition: state
        entity_id: group.gervais_tracker
        state: 'not_home'
  action:
    service: light.turn_off
    entity_id: group.bedroom_lights

- alias: 'Tell Jen to turn off her TV'
  initial_state: true
  trigger:
    platform: time
    at: '08:10:00'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: 'device_tracker.jen_tv'
        state: 'home'
      - condition: state
        entity_id: 'binary_sensor.workday_sensor'
        state: 'on'
  action:
    service: tts.voicerss_say
    entity_id: media_player.jens_broken_chromecast
    data:
      message: 'Time to turn off your TV.'

- alias: 'Timed lights - Movement Front Door'
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.ring_front_door_motion
      to: 'on'
    - platform: state
      entity_id: binary_sensor.ring_front_door_ding
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.outdoor_lights
        state: 'off'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
  action:
    - service: homeassistant.turn_off
      entity_id: automation.timed_lights_movement_front_door
    - service: light.turn_on
      data:
        entity_id:
          - group.outdoor_lights
          - light.computer_room
        brightness: 255
    - delay: '00:10:00'
    - service: light.turn_off
      entity_id:
        - group.outdoor_lights
        - light.computer_room
    - delay: ' 00:00:04'
    - service: homeassistant.turn_on
      entity_id: automation.timed_lights_movement_front_door

- alias: 'Doorbell rang - pause tv'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.ring_front_door_ding
    to: 'on'
  action:
    service: media_player.media_play_pause
    entity_id: media_player.plex_livingroom, media_player.plex_plex_h1r93s5i49ldqs0plqixfu9d

- alias: 'Doorbell notify'
  initial_state: true
  trigger:
    - platform: state
      entity_id: binary_sensor.ring_front_door_motion
      to: 'on'
    - platform: state
      entity_id: binary_sensor.ring_front_door_ding
      to: 'on'
  action:
    - service: notify.zulip
      data_template:
        message: >
          :door: {{ trigger.to_state.attributes.friendly_name }}
          {% if trigger.to_state.attributes.device_class == 'motion' %} :wave:
          {% elif trigger.to_state.attributes.device_class == 'occupancy' %} :bell:
          {% endif %}
        title: 'Security Alert'
    - delay: '00:05:30'
    - service: downloader.download_file
      data_template:
        url: '{{ states.camera.front_door.attributes.video_url }}'
        filename: '{{ now().strftime("%Y-%m-%d_%H:%M") }}_camera.front_door2.mp4'
    - service: camera.snapshot
      data_template:
        entity_id: camera.front_door
        filename: '/var/www/html/snapshots/{{ now().strftime("%Y-%m-%d_%H:%M") }}_camera.front_door2.jpg'

- alias: 'Timed lights - Movement in Livingroom'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.livingroom_motion
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.livingroom_lights
        state: 'off'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
  action:
    service: homeassistant.turn_on
    entity_id: script.timed_livingroom

- alias: 'Set sabnzb speed limit'
  initial_state: true
  trigger:
    - platform: state
      entity_id: group.householdmembers
    - platform: 'time'
      at: '10:00:00'
    - platform: 'time'
      at: '18:00:00'
    - platform: 'time'
      at: '02:00:00'
  action:
    service: rest_command.sabnzb_api

- alias: 'Home presence notification'
  initial_state: true
  trigger:
    platform: state
    entity_id: group.cam_tracker,group.jen_tracker,group.grant_tracker
  condition:
    condition: numeric_state
    entity_id: 'sensor.hass_uptime'
    above: '10'
  action:
    service: notify.zulip
    data_template:
      message: >
        :{{ trigger.to_state.attributes.friendly_name | lower }}:
        {{ trigger.to_state.attributes.friendly_name }} has
        {%- if trigger.to_state.state == 'home' %} entered
        {%- else %} exited
        {%- endif %} home.
      title: 'Family Location'

- alias: 'Phones presence notification'
  initial_state: true
  trigger:
      - platform: state
        entity_id: device_tracker.gervais_56f37929_02ce_4cc0_ab26_033d09334375,device_tracker.gail_219d5f91_3462_4a44_9c44_e159026137b6
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: 'sensor.hass_uptime'
        above: '.01'
      - condition: template
        value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
  action:
    service: notify.zulip
    data_template:
      message: >
        :{{ trigger.to_state.attributes.friendly_name | lower }}:
        {{ trigger.to_state.attributes.friendly_name }} has
        {%- if trigger.from_state.state == 'not_home' or trigger.from_state.state == 'Away' %} entered {{ trigger.to_state.state }}.
        {%- else %} exited {{ trigger.from_state.state }}.
        {%- endif %}
      title: 'Family Location'

- alias: 'Current weather notification'
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.dark_sky_summary
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: 'sensor.hass_uptime'
        above: '.01'
      - condition: template
        value_template: '{{ trigger.to_state.state != trigger.from_state.state }}'
      - condition: template
        value_template: '{{ as_timestamp(now()) - as_timestamp(states.automation.current_weather_notification.attributes.last_triggered) | int > 3600 }}'
  action:
    service: notify.zulip
    data_template:
      message: >
        [](https://ha.demontbrun.com{{ states.sensor.dark_sky_summary.attributes.entity_picture }})
        **Weather Condition:** {{ states.sensor.dark_sky_summary.state }}

        **Tempurature:** {{ states.sensor.dark_sky_temperature.state }}{{ states.sensor.dark_sky_temperature.attributes.unit_of_measurement }}

        **Feels like:** {{ states.sensor.dark_sky_apparent_temperature.state }}{{ states.sensor.dark_sky_apparent_temperature.attributes.unit_of_measurement }}
      title: 'Weather'

- alias: 'Current UV index notification'
  initial_state: true
  trigger:
    platform: numeric_state
    entity_id: sensor.dark_sky_uv_index
    above: '5'
  condition:
    condition: numeric_state
    entity_id: 'sensor.hass_uptime'
    above: '.01'
  action:
    service: notify.zulip
    data:
      message: >
        :smiling_face_with_sunglasses: UV Index is {{ states.sensor.dark_sky_uv_index.state }}. You better put on some sunscreen!
      title: 'Weather'

- alias: 'Weather forecast notification'
  initial_state: true
  trigger:
    platform: time
    at: '08:00:00'
  action:
    service: notify.zulip
    data:
      message: >
        []({{ states.sensor.dark_sky_summary.attributes.entity_picture }})
        **Today's Forecast:** {{ states.sensor.dark_sky_summary.state }}

        **High:** {{ states.sensor.dark_sky_temperature_high.state }}{{ states.sensor.dark_sky_temperature_high.attributes.unit_of_measurement }}

        **Low:** {{ states.sensor.dark_sky_temperature_low.state }}{{ states.sensor.dark_sky_temperature_low.attributes.unit_of_measurement }}
      title: 'Weather'

- alias: 'GandG not home - Movement in Bedroom'
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.bedroom_motion
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: group.gail_tracker
        state: 'not_home'
      - condition: state
        entity_id: group.gervais_tracker
        state: 'not_home'
  action:
    - service: homeassistant.turn_off
      entity_id: automation.gandg_not_home_movement_in_bedroom
    - service: notify.zulip
      data:
        message: >
          {% if states.group.jen_tracker.state == 'home' and states.group.cam_tracker.state == 'home' %}
          :cameron: Cameron or :jennifer: Jennifer
          {% elif states.group.jen_tracker.state == 'home' %}
          :jennifer: Jennifer
          {% elif states.group.cam_tracker.state == 'home' %}
          :cameron: Cameron
          {% else %}
          Someone
          {% endif %}
          is in GandG's Bedroom
        title: 'Security Alert'
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 255
        xy_color: [ 0.701,0.299 ]
    - delay: '00:00:02'
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 255
        xy_color: [ 0.443,0.518 ]
    - delay: '00:00:02'
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 255
        xy_color: [ 0.137,0.041 ]
    - delay: '00:00:02'
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 255
        xy_color: [ 0.701,0.299 ]
    - delay: '00:00:02'
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 255
        xy_color: [ 0.443,0.518 ]
    - delay: '00:00:02'
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 255
        xy_color: [ 0.137,0.041 ]
    - delay: '00:00:02'
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 255
        xy_color: [ 0.701,0.299 ]
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 255
        xy_color: [ 0.312,0.328 ]
    - delay: '00:00:05'
    - service: light.turn_off
      entity_id: light.bedroom
    - delay: '00:00:05'
    - service: homeassistant.turn_on
      entity_id: automation.gandg_not_home_movement_in_bedroom

- alias: 'Drive is filling'
  initial_state: true
  trigger:
    - platform: template
      value_template: '{{ states.sensor.disk_use_percent_media_cracker.state | int >= 95 }}'
    - platform: template
      value_template: '{{ states.sensor.disk_use_percent_media_grapes.state | int >= 95 }}'
  action:
    service: notify.zulip
    data:
      message: >
        :warning:
        {% if trigger.to_state.attributes.friendly_name == 'Disk use (percent) /media/cracker' %} Movie
        {% elif trigger.to_state.attributes.friendly_name == 'Disk use (percent) /media/grapes' %} TV
        {% endif %}
        drive is almost full.
      title: 'Alert'

- alias: 'Turn off livingroom tv when idle'
  initial_state: true
  trigger:
    - platform: time_pattern
      minutes: '/20'
      seconds: 0
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: device_tracker.livingroomtv
        state: 'home'
      - condition: or
        conditions:
          - condition: state
            entity_id: media_player.plex_livingroom
            state: 'idle'
            for:
              minutes: 15
          - condition: state
            entity_id: media_player.plex_plex_h1r93s5i49ldqs0plqixfu9d
            state: 'idle'
            for:
              minutes: 15
          - condition: state
            entity_id: media_player.living_room_roku
            state: 'idle'
            for:
              minutes: 15
  action:
    service: switch.turn_off
    entity_id: switch.tv_power

- alias: 'Gail away - sonos speaker - set sleep timer'
  initial_state: true
  trigger:
    platform: state
    entity_id: group.gail_tracker
    from: 'home'
  action:
    service: media_player.sonos_set_sleep_timer
    data:
      entity_id: media_player.sonos
      sleep_time: 900

- alias: 'Gail home - sonos speaker - clear sleep timer'
  initial_state: true
  trigger:
    platform: state
    entity_id: group.gail_tracker
    to: 'home'
  action:
    service: media_player.sonos_clear_sleep_timer
    entity_id: media_player.sonos

- alias: 'Pause sonos every 2 minutes if Gail away'
  initial_state: true
  trigger:
    platform: time_pattern
    minutes: '/2'
    seconds: 0
  condition:
    condition: state
    entity_id: group.gail_tracker
    state: 'not_home'
  action:
    service: media_player.media_pause
    entity_id: media_player.sonos

- alias: 'Turn on heater in bedroom'
  initial_state: true
  trigger:
    - platform: template
      value_template: '{{ states.sensor.bed_room_temp.state | int < 15 }}'
    - platform: time
      at: '22:00:00'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ states.sensor.bed_room_temp.state | int < 17 }}'
      - condition: template
        value_template: '{{ states("sensor.season") != "summer" }}'
      - condition: time
        after: '21:30:00'
      - condition: time
        before: '23:59:59'
      - condition: or
        conditions:
          - condition: state
            entity_id: group.gail_tracker
            state: 'home'
          - condition: template
            value_template: '{{ distance(states.device_tracker.gail_219d5f91_3462_4a44_9c44_e159026137b6) > 10 }}'
      - condition: or
        conditions:
          - condition: state
            entity_id: group.gervais_tracker
            state: 'home'
          - condition: template
            value_template: '{{ distance(states.device_tracker.gervais_56f37929_02ce_4cc0_ab26_033d09334375) > 10 }}'
  action:
    service: switch.turn_on
    entity_id: switch.switch4

- alias: 'Turn off heater in bedroom'
  initial_state: true
  trigger:
    - platform: template
      value_template: '{{ states.sensor.bed_room_temp.state|int >= 17 }}'
    - platform: time
      at: '02:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.switch4

- alias: 'Germaine arrives'
  initial_state: true
  trigger:
    platform: state
    entity_id: device_tracker.germaine
    to: 'home'
  action:
    service: homeassistant.turn_off
    entity_id: automation.gandg_not_home_movement_in_bedroom

- alias: 'Germaine leaves'
  initial_state: true
  trigger:
    platform: state
    entity_id: device_tracker.germaine
    to: 'not_home'
    for:
      minutes: 90
  action:
    service: homeassistant.turn_on
    entity_id: automation.gandg_not_home_movement_in_bedroom

- alias: 'Bell Router issues - back online'
  initial_state: true
  trigger:
    platform: state
    entity_id: device_tracker.router
    from: 'not_home'
  action:
    service: notify.zulip
    data_template:
      message: >
        :blue_circle: Router is responding
      title: 'Internet'

- alias: 'Bell Router issues - offline'
  initial_state: true
  trigger:
    platform: state
    entity_id: device_tracker.router
    to: 'not_home'
    for:
      minutes: 10
  action:
    - service: notify.zulip
      data_template:
        message: >
          :black_large_square: Router has been offline for over 10 minutes.
        title: 'Internet'
    - service: switch.turn_off
      entity_id: switch.switch5
    - delay: '00:00:30'
    - service: switch.turn_on
      entity_id: switch.switch5

- alias: 'Fing update user'
  initial_state: true
  trigger:
    platform: state
    entity_id: sensor.fing_state
  action:
    service: device_tracker.see
    data_template:
      dev_id: '{{ (trigger.to_state.state.split(": ")[1]).split(" ")[0]}}'
      location_name: >-
        {% if trigger.to_state.state.split(": ")[0] == 'Offline' %} not_home
        {% elif trigger.to_state.state.split(": ")[0] == 'In range' or trigger.to_state.state.split(": ")[0] == 'Online' %} home
        {% endif %}
